// Code generated by mockery v1.0.0. DO NOT EDIT.
package proto

import mock "github.com/stretchr/testify/mock"

// mockOneofMessage is an autogenerated mock type for the oneofMessage type
type mockOneofMessage struct {
	mock.Mock
}

// XXX_OneofFuncs provides a mock function with given fields:
func (_m *mockOneofMessage) XXX_OneofFuncs() (func(Message, *Buffer) error, func(Message, int, int, *Buffer) (bool, error), func(Message) int, []interface{}) {
	ret := _m.Called()

	var r0 func(Message, *Buffer) error
	if rf, ok := ret.Get(0).(func() func(Message, *Buffer) error); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func(Message, *Buffer) error)
		}
	}

	var r1 func(Message, int, int, *Buffer) (bool, error)
	if rf, ok := ret.Get(1).(func() func(Message, int, int, *Buffer) (bool, error)); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(func(Message, int, int, *Buffer) (bool, error))
		}
	}

	var r2 func(Message) int
	if rf, ok := ret.Get(2).(func() func(Message) int); ok {
		r2 = rf()
	} else {
		if ret.Get(2) != nil {
			r2 = ret.Get(2).(func(Message) int)
		}
	}

	var r3 []interface{}
	if rf, ok := ret.Get(3).(func() []interface{}); ok {
		r3 = rf()
	} else {
		if ret.Get(3) != nil {
			r3 = ret.Get(3).([]interface{})
		}
	}

	return r0, r1, r2, r3
}
