// Code generated by mockery v1.0.0. DO NOT EDIT.
package encoding

import mock "github.com/stretchr/testify/mock"

// MockCodec is an autogenerated mock type for the Codec type
type MockCodec struct {
	mock.Mock
}

// Marshal provides a mock function with given fields: v
func (_m *MockCodec) Marshal(v interface{}) ([]byte, error) {
	ret := _m.Called(v)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(interface{}) []byte); ok {
		r0 = rf(v)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(interface{}) error); ok {
		r1 = rf(v)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Name provides a mock function with given fields:
func (_m *MockCodec) Name() string {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}

// Unmarshal provides a mock function with given fields: data, v
func (_m *MockCodec) Unmarshal(data []byte, v interface{}) error {
	ret := _m.Called(data, v)

	var r0 error
	if rf, ok := ret.Get(0).(func([]byte, interface{}) error); ok {
		r0 = rf(data, v)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
