// Code generated by mockery v1.0.0. DO NOT EDIT.
package stats

import context "context"
import mock "github.com/stretchr/testify/mock"

// MockHandler is an autogenerated mock type for the Handler type
type MockHandler struct {
	mock.Mock
}

// HandleConn provides a mock function with given fields: _a0, _a1
func (_m *MockHandler) HandleConn(_a0 context.Context, _a1 ConnStats) {
	_m.Called(_a0, _a1)
}

// HandleRPC provides a mock function with given fields: _a0, _a1
func (_m *MockHandler) HandleRPC(_a0 context.Context, _a1 RPCStats) {
	_m.Called(_a0, _a1)
}

// TagConn provides a mock function with given fields: _a0, _a1
func (_m *MockHandler) TagConn(_a0 context.Context, _a1 *ConnTagInfo) context.Context {
	ret := _m.Called(_a0, _a1)

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context, *ConnTagInfo) context.Context); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}

// TagRPC provides a mock function with given fields: _a0, _a1
func (_m *MockHandler) TagRPC(_a0 context.Context, _a1 *RPCTagInfo) context.Context {
	ret := _m.Called(_a0, _a1)

	var r0 context.Context
	if rf, ok := ret.Get(0).(func(context.Context, *RPCTagInfo) context.Context); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.Context)
		}
	}

	return r0
}
