// Code generated by mockery v1.0.0. DO NOT EDIT.
package language

import mock "github.com/stretchr/testify/mock"

// MockCoverage is an autogenerated mock type for the Coverage type
type MockCoverage struct {
	mock.Mock
}

// BaseLanguages provides a mock function with given fields:
func (_m *MockCoverage) BaseLanguages() []Base {
	ret := _m.Called()

	var r0 []Base
	if rf, ok := ret.Get(0).(func() []Base); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Base)
		}
	}

	return r0
}

// Regions provides a mock function with given fields:
func (_m *MockCoverage) Regions() []Region {
	ret := _m.Called()

	var r0 []Region
	if rf, ok := ret.Get(0).(func() []Region); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Region)
		}
	}

	return r0
}

// Scripts provides a mock function with given fields:
func (_m *MockCoverage) Scripts() []Script {
	ret := _m.Called()

	var r0 []Script
	if rf, ok := ret.Get(0).(func() []Script); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Script)
		}
	}

	return r0
}

// Tags provides a mock function with given fields:
func (_m *MockCoverage) Tags() []Tag {
	ret := _m.Called()

	var r0 []Tag
	if rf, ok := ret.Get(0).(func() []Tag); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]Tag)
		}
	}

	return r0
}
