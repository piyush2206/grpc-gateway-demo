// Code generated by mockery v1.0.0. DO NOT EDIT.
package trace

import fmt "fmt"
import mock "github.com/stretchr/testify/mock"

// MockTrace is an autogenerated mock type for the Trace type
type MockTrace struct {
	mock.Mock
}

// Finish provides a mock function with given fields:
func (_m *MockTrace) Finish() {
	_m.Called()
}

// LazyLog provides a mock function with given fields: x, sensitive
func (_m *MockTrace) LazyLog(x fmt.Stringer, sensitive bool) {
	_m.Called(x, sensitive)
}

// LazyPrintf provides a mock function with given fields: format, a
func (_m *MockTrace) LazyPrintf(format string, a ...interface{}) {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, a...)
	_m.Called(_ca...)
}

// SetError provides a mock function with given fields:
func (_m *MockTrace) SetError() {
	_m.Called()
}

// SetMaxEvents provides a mock function with given fields: m
func (_m *MockTrace) SetMaxEvents(m int) {
	_m.Called(m)
}

// SetRecycler provides a mock function with given fields: f
func (_m *MockTrace) SetRecycler(f func(interface{})) {
	_m.Called(f)
}

// SetTraceInfo provides a mock function with given fields: traceID, spanID
func (_m *MockTrace) SetTraceInfo(traceID uint64, spanID uint64) {
	_m.Called(traceID, spanID)
}
